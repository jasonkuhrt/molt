// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`boolean > required > can be toggled to "yes" > args 1`] = `
{
  "a": true,
  "help": false,
}
`;

exports[`boolean > required > can be toggled to "yes" > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mno[22m[39m [2m|[22m yes",
  "[2K[G",
  "[1G",
  "     ❯ no [2m|[22m [32m[1myes[22m[39m",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`boolean > required > can be toggled to "yes" > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ no | yes",
  "",
  "",
  "     ❯ no | yes",
  "
",
  "",
  "",
  "
",
]
`;

exports[`boolean > required > can be toggled to "yes" and then back to "no" > args 1`] = `
{
  "a": false,
  "help": false,
}
`;

exports[`boolean > required > can be toggled to "yes" and then back to "no" > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mno[22m[39m [2m|[22m yes",
  "[2K[G",
  "[1G",
  "     ❯ no [2m|[22m [32m[1myes[22m[39m",
  "[2K[G",
  "[1G",
  "     ❯ [32m[1mno[22m[39m [2m|[22m yes",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`boolean > required > can be toggled to "yes" and then back to "no" > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ no | yes",
  "",
  "",
  "     ❯ no | yes",
  "",
  "",
  "     ❯ no | yes",
  "
",
  "",
  "",
  "
",
]
`;

exports[`boolean > required > can use tab to toggle between "yes" and "no" > args 1`] = `
{
  "a": false,
  "help": false,
}
`;

exports[`boolean > required > can use tab to toggle between "yes" and "no" > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mno[22m[39m [2m|[22m yes",
  "[2K[G",
  "[1G",
  "     ❯ no [2m|[22m [32m[1myes[22m[39m",
  "[2K[G",
  "[1G",
  "     ❯ [32m[1mno[22m[39m [2m|[22m yes",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`boolean > required > can use tab to toggle between "yes" and "no" > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ no | yes",
  "",
  "",
  "     ❯ no | yes",
  "",
  "",
  "     ❯ no | yes",
  "
",
  "",
  "",
  "
",
]
`;

exports[`boolean > required > defaults to "no" > args 1`] = `
{
  "a": false,
  "help": false,
}
`;

exports[`boolean > required > defaults to "no" > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mno[22m[39m [2m|[22m yes",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`boolean > required > defaults to "no" > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ no | yes",
  "
",
  "",
  "",
  "
",
]
`;

exports[`can be explicitly disabled > args 1`] = `[ErrorMissingArgument: Missing argument for flag "a".]`;

exports[`can be explicitly disabled > tty 1`] = `[]`;

exports[`can be explicitly disabled > tty strip ansi 1`] = `[]`;

exports[`can be explicitly disabled with a "when" condition present > args 1`] = `[ErrorMissingArgument: Missing argument for flag "a".]`;

exports[`can be explicitly disabled with a "when" condition present > tty 1`] = `[]`;

exports[`can be explicitly disabled with a "when" condition present > tty strip ansi 1`] = `[]`;

exports[`enumeration > required > can select member leftward with left key > args 1`] = `
{
  "a": "major",
  "help": false,
}
`;

exports[`enumeration > required > can select member leftward with left key > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ major[2m | [22m[32m[1mminor[22m[39m[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`enumeration > required > can select member leftward with left key > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "
",
  "",
  "",
  "
",
]
`;

exports[`enumeration > required > can select member rightward with right key > args 1`] = `
{
  "a": "minor",
  "help": false,
}
`;

exports[`enumeration > required > can select member rightward with right key > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ major[2m | [22m[32m[1mminor[22m[39m[2m | [22mpatch",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`enumeration > required > can select member rightward with right key > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "
",
  "",
  "",
  "
",
]
`;

exports[`enumeration > required > defaults to first member > args 1`] = `
{
  "a": "major",
  "help": false,
}
`;

exports[`enumeration > required > defaults to first member > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`enumeration > required > defaults to first member > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ major | minor | patch",
  "
",
  "",
  "",
  "
",
]
`;

exports[`enumeration > required > loop > left key on first member loops to last member > args 1`] = `
{
  "a": "patch",
  "help": false,
}
`;

exports[`enumeration > required > loop > left key on first member loops to last member > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ major[2m | [22mminor[2m | [22m[32m[1mpatch[22m[39m",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`enumeration > required > loop > left key on first member loops to last member > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "
",
  "",
  "",
  "
",
]
`;

exports[`enumeration > required > loop > right key on last member loops to first member > args 1`] = `
{
  "a": "major",
  "help": false,
}
`;

exports[`enumeration > required > loop > right key on last member loops to first member > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ major[2m | [22m[32m[1mminor[22m[39m[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ major[2m | [22mminor[2m | [22m[32m[1mpatch[22m[39m",
  "[2K[G",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`enumeration > required > loop > right key on last member loops to first member > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "
",
  "",
  "",
  "
",
]
`;

exports[`enumeration > required > tab > can select member leftward with shift+tab key > args 1`] = `
{
  "a": "major",
  "help": false,
}
`;

exports[`enumeration > required > tab > can select member leftward with shift+tab key > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ major[2m | [22m[32m[1mminor[22m[39m[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`enumeration > required > tab > can select member leftward with shift+tab key > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "
",
  "",
  "",
  "
",
]
`;

exports[`enumeration > required > tab > can select member rightward with tab key > args 1`] = `
{
  "a": "minor",
  "help": false,
}
`;

exports[`enumeration > required > tab > can select member rightward with tab key > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mmajor[22m[39m[2m | [22mminor[2m | [22mpatch",
  "[2K[G",
  "[1G",
  "     ❯ major[2m | [22m[32m[1mminor[22m[39m[2m | [22mpatch",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`enumeration > required > tab > can select member rightward with tab key > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "     ❯ major | minor | patch",
  "",
  "",
  "     ❯ major | minor | patch",
  "
",
  "",
  "",
  "
",
]
`;

exports[`number > optional > when nothing entered then value is undefined > args 1`] = `
{
  "a": undefined,
  "help": false,
}
`;

exports[`number > optional > when nothing entered then value is undefined > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "     ❯ ",
  "",
  "
",
]
`;

exports[`number > optional > when nothing entered then value is undefined > tty strip ansi 1`] = `
[
  "1/1  a
",
  "     ❯ ",
  "",
  "
",
]
`;

exports[`prompt when invalid input > args 1`] = `
{
  "a": "foo",
  "help": false,
}
`;

exports[`prompt when invalid input > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`prompt when invalid input > tty strip ansi 1`] = `
[
  "1/1  a
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`prompt when invalid input OR missing input > args 1`] = `
{
  "a": "foo",
  "help": false,
}
`;

exports[`prompt when invalid input OR missing input > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`prompt when invalid input OR missing input > tty strip ansi 1`] = `
[
  "1/1  a
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`prompt when missing input > args 1`] = `
{
  "a": "foo",
  "help": false,
}
`;

exports[`prompt when missing input > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`prompt when missing input > tty strip ansi 1`] = `
[
  "1/1  a
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`prompt when omitted > args 1`] = `
{
  "a": "foo",
  "help": false,
}
`;

exports[`prompt when omitted > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`prompt when omitted > tty strip ansi 1`] = `
[
  "1/1  a
",
  "     ❯ ",
  "foo",
  "
",
]
`;

exports[`string > optional > when nothing entered then value is undefined > args 1`] = `
{
  "a": undefined,
  "help": false,
}
`;

exports[`string > optional > when nothing entered then value is undefined > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "     ❯ ",
  "",
  "
",
]
`;

exports[`string > optional > when nothing entered then value is undefined > tty strip ansi 1`] = `
[
  "1/1  a
",
  "     ❯ ",
  "",
  "
",
]
`;

exports[`union > required > asks user to select member to use" > args 1`] = `
{
  "a": true,
  "help": false,
}
`;

exports[`union > required > asks user to select member to use" > tty 1`] = `
[
  "[2m[90m1/1[39m[22m  [32ma[39m
",
  "[?25l",
  "",
  "[1G",
  "
     Different kinds of answers are accepted.
     Which kind do you want to give?

     ❯ [32m[1mstring[22m[39m[2m | [22mboolean[2m | [22mnumber",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[1G",
  "
     Different kinds of answers are accepted.
     Which kind do you want to give?

     ❯ string[2m | [22m[32m[1mboolean[22m[39m[2m | [22mnumber",
  "
",
  "[?25h",
  "[?25h",
  "
",
  "[?25l",
  "",
  "[1G",
  "     ❯ [32m[1mno[22m[39m [2m|[22m yes",
  "[2K[G",
  "[1G",
  "     ❯ no [2m|[22m [32m[1myes[22m[39m",
  "
",
  "[?25h",
  "[?25h",
  "
",
]
`;

exports[`union > required > asks user to select member to use" > tty strip ansi 1`] = `
[
  "1/1  a
",
  "",
  "",
  "",
  "
     Different kinds of answers are accepted.
     Which kind do you want to give?

     ❯ string | boolean | number",
  "",
  "",
  "
     Different kinds of answers are accepted.
     Which kind do you want to give?

     ❯ string | boolean | number",
  "
",
  "",
  "",
  "
",
  "",
  "",
  "",
  "     ❯ no | yes",
  "",
  "",
  "     ❯ no | yes",
  "
",
  "",
  "",
  "
",
]
`;
